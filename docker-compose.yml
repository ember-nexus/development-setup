name: ember-nexus-dev

services:

  ember-nexus-api:
    container_name: ember-nexus-api
    build:
      context: ./api/api
      dockerfile: ./docker/Dockerfile
      target: development
    volumes:
      - ./api/api:/var/www/html
      - ./api/cypher-data-structures:/var/www/cypher-data-structures
      - ./api/cypher-entity-manager:/var/www/cypher-entity-manager
      - ./api/elastic-data-structures:/var/www/elastic-data-structures
      - ./api/elastic-entity-manager:/var/www/elastic-entity-manager
      - ./api/mongo-data-structures:/var/www/mongo-data-structures
      - ./api/mongo-entity-manager:/var/www/mongo-entity-manager
      - ./volumes/well-known-security.txt:/well-known-security.txt
      - ./volumes/api.env:/var/www/html/.env
      - ./volumes/api.env:/var/www/html/.env.test
    expose:
      - 80
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-api-api.loadbalancer.server.port=80'
      - 'traefik.http.routers.ember-nexus-api-api.rule=Host(`api.localhost`) || Host(`api.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-api-api.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-api-api.tls=true'
      - 'traefik.http.routers.ember-nexus-api-api.tls.certresolver=step-ca'

  ember-nexus-api-docs:
    container_name: ember-nexus-api-docs
    image: sujaykumarh/docsify:latest
    expose:
      - 3000
    volumes:
      - ./api/api/docs:/docs
    command: serve
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-api-docs.loadbalancer.server.port=3000'
      - 'traefik.http.routers.ember-nexus-api-docs.rule=Host(`docs.api.localhost`) || Host(`docs.api.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-api-docs.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-api-docs.tls=true'
      - 'traefik.http.routers.ember-nexus-api-docs.tls.certresolver=step-ca'

  ember-nexus-api-neo4j:
    container_name: ember-nexus-api-neo4j
    image: neo4j:5.25
    environment:
      - NEO4J_AUTH=neo4j/password
    expose:
      - 7474
      - 7687
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-api-neo4j.loadbalancer.server.port=7474'
      - 'traefik.http.routers.ember-nexus-api-neo4j.service=ember-nexus-api-neo4j'
      - 'traefik.http.routers.ember-nexus-api-neo4j.rule=Host(`neo4j.localhost`) || Host(`neo4j.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-api-neo4j.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-api-neo4j.tls=true'
      - 'traefik.http.routers.ember-nexus-api-neo4j.tls.certresolver=step-ca'
      - 'traefik.http.routers.ember-nexus-api-neo4j.middlewares=cors-neo4j'
      - 'traefik.http.middlewares.cors-neo4j.headers.customResponseHeaders.Access-Control-Allow-Origin=https://neo4j.localhost https://neo4j-bolt.localhost:7687'
      - 'traefik.http.services.ember-nexus-api-neo4j-bolt.loadbalancer.server.port=7687'
      - 'traefik.http.routers.ember-nexus-api-neo4j-bolt.service=ember-nexus-api-neo4j-bolt'
      - 'traefik.http.routers.ember-nexus-api-neo4j-bolt.rule=Host(`neo4j-bolt.localhost`) || Host(`neo4j-bolt.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-api-neo4j-bolt.entrypoints=bolt'
      - 'traefik.http.routers.ember-nexus-api-neo4j-bolt.tls=true'
      - 'traefik.http.routers.ember-nexus-api-neo4j-bolt.tls.certresolver=step-ca'

  ember-nexus-api-falkordb:
    container_name: ember-nexus-api-falkordb
    image: falkordb/falkordb:edge
    environment:
      - REDIS_ARGS=--requirepass falkordb --port 6380
    expose:
      - 3000
      - 6380
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-api-falkordb.loadbalancer.server.port=3000'
      - 'traefik.http.routers.ember-nexus-api-falkordb.service=ember-nexus-api-falkordb'
      - 'traefik.http.routers.ember-nexus-api-falkordb.rule=Host(`falkordb.localhost`) || Host(`falkordb.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-api-falkordb.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-api-falkordb.tls=true'
      - 'traefik.http.routers.ember-nexus-api-falkordb.tls.certresolver=step-ca'

  ember-nexus-api-mongodb:
    container_name: ember-nexus-api-mongodb
    image: mongo:8
    expose:
      - 27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongodb
      - MONGO_INITDB_ROOT_PASSWORD=password
    labels:
      - 'traefik.enable=true'
      - 'traefik.tcp.services.ember-nexus-api-mongodb.loadbalancer.server.port=27017'
      - 'traefik.tcp.routers.ember-nexus-api-mongodb.rule=HostSNI(`*`)'
      - 'traefik.tcp.routers.ember-nexus-api-mongodb.entrypoints=mongodb'
      - 'traefik.tcp.routers.ember-nexus-api-mongodb.service=ember-nexus-api-mongodb'
      - 'traefik.tcp.routers.ember-nexus-api-mongodb.tls=true'

  ember-nexus-api-elasticsearch:
    container_name: ember-nexus-api-elasticsearch
    image: elasticsearch:8.16.1
    mem_limit: 4gb
    expose:
      - 9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=true

  ember-nexus-api-kibana:
    container_name: ember-nexus-api-kibana
    image: kibana:8.16.1
    expose:
      - 5601
    depends_on:
      - ember-nexus-api-elasticsearch
    environment:
      SERVER_NAME: elastic.${DOMAIN}
      ELASTICSEARCH_HOSTS: '["http://api-elasticsearch:9200"]'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-api-kibana.loadbalancer.server.port=5601'
      - 'traefik.http.routers.ember-nexus-api-kibana.rule=Host(`kibana.localhost`) || Host(`kibana.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-api-kibana.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-api-kibana.tls=true'
      - 'traefik.http.routers.ember-nexus-api-kibana.tls.certresolver=step-ca'

  ember-nexus-api-redis:
    container_name: ember-nexus-api-redis
    image: redis:8.0-M02
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass redis-password

  ember-nexus-api-redisinsight:
    container_name: ember-nexus-api-redisinsight
    image: redislabs/redisinsight:latest
    expose:
      - 5540
#    volumes:
#      - ./volumes/redisinsight:/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-api-redisinsight.loadbalancer.server.port=5540'
      - 'traefik.http.routers.ember-nexus-api-redisinsight.rule=Host(`redisinsight.localhost`) || Host(`redisinsight.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-api-redisinsight.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-api-redisinsight.tls=true'
      - 'traefik.http.routers.ember-nexus-api-redisinsight.tls.certresolver=step-ca'

  ember-nexus-api-rabbitmq:
    container_name: ember-nexus-api-rabbitmq
    image: rabbitmq:3-management
    expose:
      - 5672
      - 15672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-api-rabbitmq.loadbalancer.server.port=15672'
      - 'traefik.http.routers.ember-nexus-api-rabbitmq.rule=Host(`rabbitmq.localhost`) || Host(`rabbitmq.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-api-rabbitmq.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-api-rabbitmq.tls=true'
      - 'traefik.http.routers.ember-nexus-api-rabbitmq.tls.certresolver=step-ca'

  ember-nexus-api-minio:
    container_name: ember-nexus-api-minio
    image: quay.io/minio/minio:latest
#    ports:
#      - '9000:9000'
#      - '9001:9001'
    volumes:
      - ./volumes/minio:/data
    environment:
      - MINIO_ROOT_USER=ROOTNAME
      - MINIO_ROOT_PASSWORD=CHANGEME123
    command: server /data --console-address ":9001"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-api-minio.loadbalancer.server.port=9001'
      - 'traefik.http.routers.ember-nexus-api-minio.rule=Host(`minio.localhost`) || Host(`minio.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-api-minio.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-api-minio.tls=true'
      - 'traefik.http.routers.ember-nexus-api-minio.tls.certresolver=step-ca'

  # frontend stuff

  ember-nexus-frontend-node:
    container_name: ember-nexus-frontend-node
    build:
      context: ./docker/frontend
    volumes:
      - ./frontend:/srv
    working_dir: /srv
    tty: true
    ports:
      - 6006:6006
#    expose:
#      - 6006
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-frontend-node-storybook.loadbalancer.server.port=6006'
      - 'traefik.http.routers.ember-nexus-frontend-node-storybook.rule=Host(`storybook.frontend.localhost`) || Host(`storybook.frontend.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-frontend-node-storybook.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-frontend-node-storybook.tls=true'
      - 'traefik.http.routers.ember-nexus-frontend-node-storybook.tls.certresolver=step-ca'

  ember-nexus-frontend-web-sdk-docs:
    container_name: ember-nexus-frontend-web-sdk-docs
    image: sujaykumarh/docsify:latest
    expose:
      - 3000
    volumes:
      - ./frontend/web-sdk/docs:/docs
    command: serve
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-frontend-web-sdk-docs.loadbalancer.server.port=3000'
      - 'traefik.http.routers.ember-nexus-frontend-web-sdk-docs.rule=Host(`docs.web-sdk.localhost`) || Host(`docs.web-sdk.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-frontend-web-sdk-docs.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-frontend-web-sdk-docs.tls=true'
      - 'traefik.http.routers.ember-nexus-frontend-web-sdk-docs.tls.certresolver=step-ca'

  ember-nexus-frontend-uix-docs:
    container_name: ember-nexus-frontend-uix-docs
    image: sujaykumarh/docsify:latest
    expose:
      - 3000
    volumes:
      - ./frontend/uix/docs:/docs
    command: serve
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-frontend-uix-docs.loadbalancer.server.port=3000'
      - 'traefik.http.routers.ember-nexus-frontend-uix-docs.rule=Host(`docs.uix.localhost`) || Host(`docs.uix.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-frontend-uix-docs.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-frontend-uix-docs.tls=true'
      - 'traefik.http.routers.ember-nexus-frontend-uix-docs.tls.certresolver=step-ca'

  ember-nexus-frontend-app-plugin-experimental-docs:
    container_name: ember-nexus-frontend-app-plugin-experimental-docs
    image: sujaykumarh/docsify:latest
    expose:
      - 3000
    volumes:
      - ./frontend/app-plugin-experimental/docs:/docs
    command: serve
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-frontend-app-plugin-experimental-docs.loadbalancer.server.port=3000'
      - 'traefik.http.routers.ember-nexus-frontend-app-plugin-experimental-docs.rule=Host(`docs.app-plugin-experimental.localhost`) || Host(`docs.app-plugin-experimental.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-frontend-app-plugin-experimental-docs.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-frontend-app-plugin-experimental-docs.tls=true'
      - 'traefik.http.routers.ember-nexus-frontend-app-plugin-experimental-docs.tls.certresolver=step-ca'

  # logging stuff

  ember-nexus-logging-dozzle:
    image: amir20/dozzle:latest
    container_name: ember-nexus-logging-dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-logging-dozzle.loadbalancer.server.port=8080'
      - 'traefik.http.routers.ember-nexus-logging-dozzle.rule=Host(`logs.localhost`) || Host(`logs.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-logging-dozzle.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-logging-dozzle.tls=true'
      - 'traefik.http.routers.ember-nexus-logging-dozzle.tls.certresolver=step-ca'

  # index application

  ember-nexus-index:
    image: daledavies/jump:latest
    container_name: ember-nexus-index
    expose:
      - 8080
    volumes:
      - ./volumes/index/backgrounds:/backgrounds
      - ./volumes/index/favicon:/favicon
      - ./volumes/index/search:/search
      - ./volumes/index/sites:/sites
    environment:
      SITENAME: 'Ember Nexus Development Environment'
      BGBLUR: 10
      CACHEBYPASS: TRUE
      CHECKSTATUS: FALSE
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.ember-nexus-index.loadbalancer.server.port=8080'
      - 'traefik.http.routers.ember-nexus-index.rule=Host(`index.localhost`) || Host(`${DOMAIN}`) || Host(`index.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-index.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-index.tls=true'
      - 'traefik.http.routers.ember-nexus-index.tls.certresolver=step-ca'

  # proxy

  ember-nexus-proxy-traefik:
    image: traefik:v3.2
    container_name: ember-nexus-proxy-traefik
    depends_on:
      ember-nexus-proxy-step-ca:
        condition: service_healthy
    entrypoint: "/traefik.sh"
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.bolt.address=:7687
      - --entrypoints.mongodb.address=:27017
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api
      - --certificatesresolvers.step-ca.acme.storage=acme.json
      - --certificatesresolvers.step-ca.acme.caserver=https://ember-nexus-proxy-step-ca:9000/acme/acme/directory
      - --certificatesresolvers.step-ca.acme.email=ember-nexus@localhost
      - --certificatesresolvers.step-ca.acme.certificatesDuration=24
      - --certificatesresolvers.step-ca.acme.tlschallenge=true
      - --certificatesresolvers.step-ca.acme.caCertificates=/certs/root_ca.crt
    ports:
      - '80:80'
      - '443:443'
      - '7687:7687'
      - '27017:27017'
    networks:
      default:
        aliases:
          - api.localhost
          - docs.api.localhost
          - neo4j.localhost
          - neo4j-bolt.localhost
          - falkordb.localhost
          - kibana.localhost
          - redisinsight.localhost
          - rabbitmq.localhost
          - minio.localhost
          - storybook.frontend.localhost
          - docs.web-sdk.localhost
          - docs.uix.localhost
          - docs.app-plugin-experimental.localhost
          - proxy.localhost
          - logs.localhost
          - index.localhost
          - api.${DOMAIN}
          - docs.api.${DOMAIN}
          - neo4j.${DOMAIN}
          - neo4j-bolt.${DOMAIN}
          - falkordb.${DOMAIN}
          - kibana.${DOMAIN}
          - redisinsight.${DOMAIN}
          - rabbitmq.${DOMAIN}
          - minio.${DOMAIN}
          - storybook.frontend.${DOMAIN}
          - docs.web-sdk.${DOMAIN}
          - docs.uix.${DOMAIN}
          - docs.app-plugin-experimental.${DOMAIN}
          - proxy.${DOMAIN}
          - logs.${DOMAIN}
          - index.${DOMAIN}
          - ${DOMAIN}
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './volumes/acme.json:/acme.json'
      - './volumes/step-ca:/step-ca:ro'
      - './volumes/traefik.sh:/traefik.sh'
    labels:
      - 'traefik.enable=true'
      # dashboard
      - 'traefik.http.routers.ember-nexus-proxy-traefik.rule=Host(`proxy.localhost`) || Host(`proxy.${DOMAIN}`)'
      - 'traefik.http.routers.ember-nexus-proxy-traefik.service=api@internal'
      - 'traefik.http.routers.ember-nexus-proxy-traefik.tls=true'
      - 'traefik.http.routers.ember-nexus-proxy-traefik.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-proxy-traefik.tls.certresolver=step-ca'
      # unknown domain http redirect
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-http.rule=HostRegexp(`.*`)'
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-http.entrypoints=web'
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-http.middlewares=redirect-unknown-domain'
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-http.service=noop@internal'
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-http.priority=1'
      # unknown domain https redirect
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-https.rule=HostRegexp(`.*`)'
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-https.entrypoints=websecure'
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-https.tls=true'
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-https.middlewares=redirect-unknown-domain'
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-https.service=noop@internal'
      - 'traefik.http.routers.ember-nexus-redirect-unknown-domain-https.priority=1'
      # middleware redirect
      - 'traefik.http.middlewares.redirect-unknown-domain.redirectregex.regex=.*'
      - 'traefik.http.middlewares.redirect-unknown-domain.redirectregex.replacement=https://index.localhost/'

  ember-nexus-proxy-step-ca:
    container_name: ember-nexus-proxy-step-ca
    image: smallstep/step-ca:latest
    expose:
      - 9000
    volumes:
      - ./volumes/step-ca:/home/step
      - ./volumes/neo4j-cert:/neo4j-cert
    environment:
      - DOCKER_STEPCA_INIT_NAME=EmberNexusLocalhost
      - DOCKER_STEPCA_INIT_DNS_NAMES=localhost,proxy-step-ca,$(hostname -f)
      - DOCKER_STEPCA_INIT_ACME=true
